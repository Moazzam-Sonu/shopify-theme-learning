{% doc %}
  @prompt
    i add metafield for every variant do you able to show that metafield when that variant select meta fied name is custom.dilivery_detail
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-variant-metafield-{{ ai_gen_id }} {
    padding: {{ block.settings.padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    margin: {{ block.settings.margin_top }}px 0 {{ block.settings.margin_bottom }}px 0;
    border: {{ block.settings.border_thickness }}px solid {{ block.settings.border_color }};
    display: none;
  }

  .ai-variant-metafield-{{ ai_gen_id }}.ai-variant-metafield-visible-{{ ai_gen_id }} {
    display: block;
  }

  .ai-variant-metafield-{{ ai_gen_id }}__label {
    font-size: {{ block.settings.label_font_size }}px;
    font-weight: {{ block.settings.label_font_weight }};
    color: {{ block.settings.label_color }};
    margin-bottom: 8px;
    display: block;
  }

  .ai-variant-metafield-{{ ai_gen_id }}__content {
    font-size: {{ block.settings.content_font_size }}px;
    color: {{ block.settings.content_color }};
    line-height: 1.5;
  }

  .ai-variant-metafield-{{ ai_gen_id }}__icon {
    display: inline-block;
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    margin-right: 8px;
    vertical-align: middle;
  }

  .ai-variant-metafield-{{ ai_gen_id }}__icon svg {
    width: 100%;
    height: 100%;
    fill: {{ block.settings.icon_color }};
  }
{% endstyle %}

<variant-metafield-display-{{ ai_gen_id }}
  class="ai-variant-metafield-{{ ai_gen_id }}"
  data-product-id="{{ product.id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.show_icon %}
    <span class="ai-variant-metafield-{{ ai_gen_id }}__icon">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="12" cy="12" r="10"></circle>
        <line x1="12" y1="16" x2="12" y2="12"></line>
        <line x1="12" y1="8" x2="12.01" y2="8"></line>
      </svg>
    </span>
  {% endif %}
  
  {% if block.settings.label != blank %}
    <span class="ai-variant-metafield-{{ ai_gen_id }}__label">{{ block.settings.label }}</span>
  {% endif %}
  
  <div class="ai-variant-metafield-{{ ai_gen_id }}__content" data-metafield-content>
    {% if product.selected_or_first_available_variant.metafields.custom.dilivery_detail != blank %}
      {{ product.selected_or_first_available_variant.metafields.custom.dilivery_detail }}
    {% endif %}
  </div>
</variant-metafield-display-{{ ai_gen_id }}>

<script>
  (function() {
    class VariantMetafieldDisplay{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.productId = this.dataset.productId;
        this.contentElement = this.querySelector('[data-metafield-content]');
      }

      connectedCallback() {
        this.setupVariantListener();
        this.updateVisibility();
      }

      setupVariantListener() {
        const productForm = document.querySelector(`product-form[data-product-id="${this.productId}"]`) || 
                           document.querySelector('product-form') ||
                           document.querySelector('form[action*="/cart/add"]');

        if (productForm) {
          const variantInput = productForm.querySelector('input[name="id"]') ||
                              productForm.querySelector('select[name="id"]');
          
          if (variantInput) {
            variantInput.addEventListener('change', () => {
              this.updateMetafield(variantInput.value);
            });
          }

          productForm.addEventListener('change', (event) => {
            if (event.target.name === 'id') {
              this.updateMetafield(event.target.value);
            }
          });
        }

        document.addEventListener('variant:change', (event) => {
          if (event.detail && event.detail.variant && event.detail.variant.id) {
            this.updateMetafield(event.detail.variant.id);
          }
        });
      }

      updateMetafield(variantId) {
        if (!variantId) return;

        fetch(`${window.Shopify.routes.root}products/${this.getProductHandle()}.js`)
          .then(response => response.json())
          .then(product => {
            const variant = product.variants.find(v => v.id == variantId);
            
            if (variant && variant.metafields && variant.metafields.custom && variant.metafields.custom.dilivery_detail) {
              this.contentElement.innerHTML = variant.metafields.custom.dilivery_detail;
              this.classList.add('ai-variant-metafield-visible-{{ ai_gen_id }}');
            } else {
              this.contentElement.innerHTML = '';
              this.classList.remove('ai-variant-metafield-visible-{{ ai_gen_id }}');
            }
          })
          .catch(error => {
            console.error('Error fetching variant metafield:', error);
          });
      }

      updateVisibility() {
        if (this.contentElement.innerHTML.trim() !== '') {
          this.classList.add('ai-variant-metafield-visible-{{ ai_gen_id }}');
        } else {
          this.classList.remove('ai-variant-metafield-visible-{{ ai_gen_id }}');
        }
      }

      getProductHandle() {
        const urlParts = window.location.pathname.split('/');
        const productIndex = urlParts.indexOf('products');
        if (productIndex !== -1 && urlParts[productIndex + 1]) {
          return urlParts[productIndex + 1];
        }
        return '';
      }
    }

    customElements.define('variant-metafield-display-{{ ai_gen_id }}', VariantMetafieldDisplay{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Variant delivery details",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "label",
      "label": "Label",
      "default": "Delivery Information"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": true
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#F3F3F3"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "border_thickness",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 1
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Padding",
      "default": 15
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Margin top",
      "default": 10
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Margin bottom",
      "default": 10
    },
    {
      "type": "header",
      "content": "Label"
    },
    {
      "type": "range",
      "id": "label_font_size",
      "min": 10,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "label_font_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "600",
          "label": "Semi-bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "label_color",
      "label": "Color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "range",
      "id": "content_font_size",
      "min": 10,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "content_color",
      "label": "Color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Icon"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Size",
      "default": 20
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Color",
      "default": "#121212"
    }
  ],
  "presets": [
    {
      "name": "Variant delivery details"
    }
  ]
}
{% endschema %}